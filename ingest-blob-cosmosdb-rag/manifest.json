{
    "title": "Ingestand vectorize documents from blob storage into Azure Cosmos DB for NoSQL",
    "description": "This workflow reads documents (PDFs, markdown, txt, etc.) from Azure Blob Storage, chunks the text, and created vector embeddings of the text. The resulting data is formatted into a JSON document and inserted into Azure Cosmos DB for NoSQL for search and retrieval (RAG) purposes.",
    "prerequisites": "To use this template, you need to configure an Azure Open AI instance and an embedding model. Learn more [here](https://github.com/Azure/logicapps/tree/master/LogicApps-AI-RAG-Demo).You also need to [create an Azure Cosmos DB database](https://learn.microsoft.com/azure/cosmos-db/nosql/quickstart-dotnet), and use the keys and endpoint to create connection. You should also familiarize yourself with Vector Search in Azure Cosmos DB](https://learn.microsoft.com/azure/cosmos-db/nosql/vector-search).",
    "detailsDescription": "",
    "tags": [
        "RAG-Document-Ingestion", "vector-search", "Azure-Cosmos-DB", "Azure-Blob-Storage", "Azure-OpenAI"
    ],
    "skus": [
        "standard"
    ],
    "kinds": [
        "stateful",
        "stateless"
    ],
    "details": {
        "By": "Microsoft",
        "Type": "Workflow",
        "Trigger": "Request",
        "Category": "AI,RAG"
    },
    "artifacts": [
        {
            "type": "workflow",
            "file": "workflow.json"
        }
    ],
    "images": {
        "light": "workflow-light",
        "dark": "workflow-dark"
    },
    "parameters": [
        {
            "name": "OpenAI_TextEmbedding_Deployment_#workflowname#",
            "displayName": "OpenAI text embedding deployment identifier",
            "type": "String",
            "description": "Provide the Azure OpenAI deployment model",
            "required": true
        },
        {
            "name": "Blob_Path_pdf_ingestion_#workflowname#",
            "displayName": "Path of documents in Azure Blob Storage",
            "type": "String",
            "description": "Provide the blob stoage page where the documents are stored",
            "required": true
        },
        {
            "name": "CosmosDB_database_#workflowname#",
            "displayName": "Name of Azure Cosmos DB database",
            "type": "String",
            "description": "Provide the name of the Azure Cosmos DB database",
            "required": true
        },
        {
            "name": "CosmosDB_collection_#workflowname#",
            "displayName": "Name of Azure Cosmos DB collection",
            "type": "String",
            "description": "Provide the name of the Azure Cosmos DB collection",
            "required": true
        },
        {
            "name": "CosmosDB_vectorpath_#workflowname#",
            "displayName": "Path or property of vector embeddings in Azure Cosmos DB data items",
            "type": "String",
            "description": "Provide the path or property of the vector embeddings in the Azure Cosmos DB data items",
            "required": true
        },
        {
            "name": "CosmosDB_textpath_#workflowname#",
            "displayName": "Property containing the document text in Azure Cosmos DB data items",
            "type": "String",
            "description": "Provide the property containing the document text in the Azure Cosmos DB data items",
            "required": true
        }
        
    ],
    "connections": {
        "aoai-connection_#workflowname#": {
            "connectorId": "/serviceProviders/openai",
            "kind": "inapp"
        },
        "blob-connection_#workflowname#": {
            "connectorId": "/serviceProviders/AzureBlob",
            "kind": "inapp"
        },
        "cosmosdb-connection_#workflowname#": {
            "connectorId": "/serviceProviders/AzureCosmosDB",
            "kind": "inapp"
        }
    }
}