{
    "title": "Ingest and vectorize documents from Azure Blob Storage into Azure Cosmos DB for NoSQL - RAG pattern",
    "description": "To support search and retrieval purposes for the retrieval-augmented generation (RAG) pattern, this workflow reads documents, such as PDFs and Markdown, from Azure Blob Storage, chunks the text, creates vector embeddings, formats the resulting data into a JSON document, and inserts that content into Azure Cosmos DB for NoSQL.",
    "prerequisites": "Before you use this template, you need to configure an Azure Open AI instance with an embedding model. For more detailed prerequisites, see the [Azure Logic Apps project sample on GitHub - Create a Chat with Your Data](https://github.com/Azure/logicapps/tree/master/LogicApps-AI-RAG-Demo](https://github.com/Azure/logicapps/tree/master/LogicApps-AI-RAG-Demo). You also need to [create an Azure Cosmos DB database](https://learn.microsoft.com/azure/cosmos-db/nosql/quickstart-dotnet), and create a connection by using the keys and endpoint. Also, get more familiar with [Vector Search in Azure Cosmos DB](https://learn.microsoft.com/azure/cosmos-db/nosql/vector-search).",
    "detailsDescription": "",
    "tags": [
        "RAG-Document-Ingestion", "vector-search", "Azure-Cosmos-DB", "Azure-Blob-Storage", "Azure-OpenAI"
    ],
    "skus": [
        "standard"
    ],
    "kinds": [
        "stateful",
        "stateless"
    ],
    "details": {
        "By": "Microsoft",
        "Type": "Workflow",
        "Trigger": "Request",
        "Category": "AI,RAG"
    },
    "artifacts": [
        {
            "type": "workflow",
            "file": "workflow.json"
        }
    ],
    "images": {
        "light": "workflow-light",
        "dark": "workflow-dark"
    },
    "parameters": [
        {
            "name": "OpenAI_TextEmbedding_Deployment_#workflowname#",
            "displayName": "OpenAI text embedding deployment identifier",
            "type": "String",
            "description": "Provide the deployment model for Azure OpenAI.",
            "required": true
        },
        {
            "name": "Blob_Path_pdf_ingestion_#workflowname#",
            "displayName": "Blob Storage documents path",
            "type": "String",
            "description": "Provide the path to the documents in Blob Storage.",
            "required": true
        },
        {
            "name": "CosmosDB_database_#workflowname#",
            "displayName": "Cosmos DB name",
            "type": "String",
            "description": "Provide the name for the Azure Cosmos DB database.",
            "required": true
        },
        {
            "name": "CosmosDB_collection_#workflowname#",
            "displayName": "Cosmos DB collection name",
            "type": "String",
            "description": "Provide the name of the Azure Cosmos DB collection",
            "required": true
        },
        {
            "name": "CosmosDB_vectorpath_#workflowname#",
            "displayName": "Path or property of vector embeddings in Azure Cosmos DB data items",
            "type": "String",
            "description": "Provide the path or property of the vector embeddings in the Azure Cosmos DB data items",
            "required": true
        },
        {
            "name": "CosmosDB_textpath_#workflowname#",
            "displayName": "Property containing the document text in Azure Cosmos DB data items",
            "type": "String",
            "description": "Provide the property containing the document text in the Azure Cosmos DB data items",
            "required": true
        }
        
    ],
    "connections": {
        "aoai-connection_#workflowname#": {
            "connectorId": "/serviceProviders/openai",
            "kind": "inapp"
        },
        "blob-connection_#workflowname#": {
            "connectorId": "/serviceProviders/AzureBlob",
            "kind": "inapp"
        },
        "cosmosdb-connection_#workflowname#": {
            "connectorId": "/serviceProviders/AzureCosmosDB",
            "kind": "inapp"
        }
    }
}