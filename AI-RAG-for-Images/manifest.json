{
    "title": "RAG - Interact with Azure OpenAI GPT-4 vision model to analyze the contents of images",
    "description": "This template uses Get Chat Completions action from Azure OpenAI connector to interact with OpenAI GPT-4 vision model to analyze the content of an image (a Purachse Order) and provide answers to specific questions based on that image.",
    "prerequisites": "There are two pre-requisites. 1.) Before you use this template, you need to configure Azure OpenAI instance with embedding model. Please ensure that the deployment model you use supports image/vision requests. [Learn more](https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/gpt-with-vision?tabs=rest%2Csystem-assigned%2Cresource) . 2) In this template folder, we have provided a sample image which this template uses. If you want to try this sample as it, please copy the image on a File Share and use in the sample. Alternately, you can use your image and update the questions asked in the GetChatCompletion actions in the template",
    "tags": [
        "RAG-Document-Ingestion"
    ],
    "skus": [
        "standard"
    ],
    "kinds": [
        "stateful",
        "stateless"
    ],
    "details": {
        "By": "Microsoft",
        "Type": "Workflow",
        "Trigger": "Request",
        "Category": "AI,RAG"
    },
    "artifacts": [
        {
            "type": "workflow",
            "file": "workflow.json"
        }
    ],
    "images": {
        "light": "workflow_light",
        "dark": "workflow_dark"
    },
    "parameters": [
        {
            "name": "AzureOpenAI_deployment_model_vision_#workflowname#",
            "displayName": "Azure OpenAI deployment model",
            "type": "String",
            "description": "Provide the Azure OpenAI deployment model that supports image/vision",
            "required": true
        }
        
    ],
    "connections": {
        "AzureFile_#workflowname#": {
            "connectorId": "/serviceProviders/AzureFile",
            "kind": "inapp"
        },
        "Openai_#workflowname#": {
            "connectorId": "/serviceProviders/openai",
            "kind": "inapp"
        }
    }
}