{
    "title": "Interact with Azure OpenAI GPT-4 vision model to analyze image content - RAG pattern",
    "description": "Based on the retrieval-augmented generation (RAG) pattern, this workflow template analyzes the image content, for example, a purchase order, and provides answers to specific questions, based on that image. The workflow performs this task by using the 'Get chat completions' action from the Azure OpenAI connector to interact with the OpenAI GPT-4 vision model.",
    "prerequisites": "This template has two prerequisites: 1) Before you use this template, you need to configure an Azure OpenAI instance with an embedding model. Make sure the deployment model that you use supports image and vision requests. [Learn more](https://go.microsoft.com/fwlink/?linkid=2282600). 2) The template folder includes a sample image, which this template uses. To try the template using this sample, copy the image to a file share for use in the sample. Alternately, you can use your own image, and update the questions prompted by the 'Get chat completions' action in the template.",
    "tags": [
        "RAG-Document-Ingestion"
    ],
    "skus": [
        "standard"
    ],
    "kinds": [
        "stateful",
        "stateless"
    ],
    "details": {
        "By": "Microsoft",
        "Type": "Workflow",
        "Trigger": "Request",
        "Category": "AI,RAG"
    },
    "artifacts": [
        {
            "type": "workflow",
            "file": "workflow.json"
        }
    ],
    "images": {
        "light": "workflow_light",
        "dark": "workflow_dark"
    },
    "parameters": [
        {
            "name": "AzureOpenAI_deployment_model_vision_#workflowname#",
            "displayName": "OpenAI deployment model",
            "type": "String",
            "description": "Provide the Azure OpenAI deployment model that supports image and vision.",
            "required": true
        }
        
    ],
    "connections": {
        "AzureFile_#workflowname#": {
            "connectorId": "/serviceProviders/AzureFile",
            "kind": "inapp"
        },
        "Openai_#workflowname#": {
            "connectorId": "/serviceProviders/openai",
            "kind": "inapp"
        }
    }
}
