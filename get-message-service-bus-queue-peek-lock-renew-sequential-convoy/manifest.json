{
    "title": "Azure Service Bus: Sequential convoy pattern",

    "description": "This workflow template triggers when a message is available in a Service Bus session enabled queue. The workflow processes related messages from a specific session on the same workflow instance, creating different workflow instances for each session in the queue.",

    "prerequisites": "Before you can use this template, you need to configure a Service Bus namespace and create a queue with session enabled. For more information about Service Bus see [Create a new queue on Service Bus](https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-quickstart-portal). You also need to configure your Logic App to support stateful connectors, which is required for sessions. For more information see [Enable stateful mode for stateless built-in connectors in Azure Logic Apps](https://go.microsoft.com/fwlink/?linkid=2296010)",

    "skus": [
        "standard"
    ],
    "kinds": [
        "stateful",
        "stateless"
    ],
    "details": {
        "By": "Microsoft",
        "Type": "Workflow",
        "Trigger": "Event",    
        "Category": "Design Patterns"
    },
    "artifacts": [
        {
            "type": "workflow",
            "file": "workflow.json"
        }
    ],
    "images": {
        "light": "snapshot_light",
        "dark": "snapshot_dark"
    },
    "parameters": [
        {
            "name": "queueNameSession_#workflowname#",
            "displayName": "Queue name",

            "type": "String",
            "default": "Service Bus session enabled queue name",

            "description": "The name of the session enabled Service Bus queue from where to get the message.",

            "required": true
        },
        {
            "name": "messageBatchSize_#workflowname#",
            "displayName": "Message batch size",

            "type": "Int",
            "default": "50",
            "description": "The number of messages to get as a single batch.",

            "required": true
        },
        {
            "name": "delayInMinutes_#workflowname#",
            "displayName": "Delay before next token renewal",
            "type": "Int",
            "default": "3",
            "description": "The number of minutes to delay processing before renewing the lock token. Make sure this value is smaller than the queue's lock token duration.",

            "required": true
        }
    ],
    "connections": {
        "serviceBus_#workflowname#": {
            "connectorId": "/serviceProviders/serviceBus",
            "kind": "inapp"
        }
    }
}
