
{
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Get_multiple_embeddings": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "deploymentId": "@parameters('OpenAI_TextEmbedding_Deployment_#workflowname#')",
                        "input": "@take(body('Chunk_text')?['value'], length(body('Chunk_text')['value']))"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "aoai-connection_#workflowname#",
                        "operationId": "getArrayEmbeddings",
                        "serviceProviderId": "/serviceProviders/openai"
                    },
                    "retryPolicy": {
                        "type": "fixed",
                        "count": 3,
                        "interval": "PT5S"
                    }
                },
                "runAfter": {
                    "Chunk_text": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Select_embeddings_and_map_to_CosmosDB": {
                "type": "Select",
                "inputs": {
                    "from": "@range(0, length(body('Chunk_text')['value']))\r\n",
                    "select": {
                        "@{parameters('CosmosDB_Text_Path_#workflowname#')}": "@{body('Chunk_text')['value'][item()]}",
                        "documentName": "@{triggerBody()?['name']}",
                        "@{parameters('CosmosDB_Vector_Path_#workflowname#')}": "@body('Get_multiple_embeddings')['embeddings'][item()]",
                        "fileType": "@{triggerBody()?['properties']?['blobFullPathWithContainer']}",
                        "id": "@{guid()}",
                        "chunkNumber": "@{add(item(),1)}",
                        "totalChunks": "@{ length(body('Chunk_text')['value'])}"
                    }
                },
                "runAfter": {
                    "Get_multiple_embeddings": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Chunk_text": {
                "type": "ChunkText",
                "inputs": {
                    "chunkingStrategy": "TokenSize",
                    "text": "@body('Analyze_Document_for_Prebuilt_or_Custom_models_(v4.x_API)_1')?['analyzeResult']?['content']",
                    "EncodingModel": "cl100k_base",
                    "TokenSize": 5000,
                    "PageOverlapLength": 200
                },
                "runAfter": {
                    "Analyze_Document_for_Prebuilt_or_Custom_models_(v4.x_API)_1": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Read_blob_content": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "containerName": "@parameters('Blob_Path_#workflowname#')",
                        "blobName": "@triggerBody()?['name']"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "readBlob",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                },
                "runAfter": {}
            },
            "Analyze_Document_for_Prebuilt_or_Custom_models_(v4.x_API)_1": {
                "type": "ApiConnection",
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "formrecognizer_#workflowname#"
                        }
                    },
                    "method": "post",
                    "body": "@body('Read_blob_content')?['content']",
                    "path": "/connectorinternaldocumentintelligence/documentModels/@{encodeURIComponent('prebuilt-read')}:analyze",
                    "queries": {
                        "api-version": "2024-11-30",
                        "outputContentFormat": "markdown"
                    }
                },
                "runAfter": {
                    "Read_blob_content": [
                        "SUCCEEDED"
                    ]
                }
            },
            "For_each": {
                "type": "foreach",
                "foreach": "@outputs('Select_embeddings_and_map_to_CosmosDB')['body']",
                "actions": {
                    "Create_or_update_document_(V3)": {
                        "type": "ApiConnection",
                        "inputs": {
                            "host": {
                                "connection": {
                                    "referenceName": "cosmosdb-connection_#workflowname#"
                                }
                            },
                            "method": "post",
                            "body": "@items('For_each')",
                            "path": "/v2/cosmosdb/@{encodeURIComponent(parameters('CosmosDB_Account_#workflowname#'))}/dbs/@{encodeURIComponent(parameters('CosmosDB_Database_#workflowname#'))}/colls/@{encodeURIComponent(parameters('CosmosDB_Collection_#workflowname#'))}/docs"
                        }
                    }
                },
                "runAfter": {
                    "Select_embeddings_and_map_to_CosmosDB": [
                        "SUCCEEDED"
                    ]
                }
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_a_blob_is_added_or_updated": {
                "type": "ServiceProvider",
                "inputs": {
                    "parameters": {
                        "path": "@parameters('Blob_Path_#workflowname#')"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "AzureBlob",
                        "operationId": "whenABlobIsAddedOrModified",
                        "serviceProviderId": "/serviceProviders/AzureBlob"
                    }
                }
            }
        }
    }