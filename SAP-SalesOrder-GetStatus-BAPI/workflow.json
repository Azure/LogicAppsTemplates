{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Condition": {
                "actions": {
                    "Post_adaptive_card_and_wait_for_a_response": {
                        "inputs": {
                            "body": {
                                "body": {
                                    "messageBody": "{\n  \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\n  \"type\": \"AdaptiveCard\",\n  \"version\": \"1.2\",\n  \"body\": [\n    {\n          \"type\": \"TextBlock\",\n          \"text\": \"Enter the sales order number incl. leading zeros:\",\n          \"weight\": \"Bolder\",\n          \"size\": \"Medium\"\n        },\n    {\n      \"type\": \"Input.Text\",\n      \"id\": \"salesOrderNumber\",\n      \"placeholder\": \"Enter Sales Order Number incl. leading zeros\",\n      \"errorMessage\": \"Sales Order Number is required\"\n    }\n  ],\n  \"actions\": [\n    {\n      \"type\": \"Action.Submit\",\n      \"title\": \"Submit\",\n      \"data\": {\n        \"action\": \"submitSalesOrderNumber\"\n      }\n    }\n  ]\n}",
                                    "recipient": {
                                        "to": "@triggerBody()?['from']?['user']?['id']"
                                    },
                                    "updateMessage": "Thanks for your response!"
                                },
                                "notificationUrl": "@{listCallbackUrl()}"
                            },
                            "host": {
                                "connection": {
                                    "referenceName": "teams_#workflowname#"
                                }
                            },
                            "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}/$subscriptions"
                        },
                        "type": "ApiConnectionWebhook"
                    }
                },
                "else": {
                    "actions": {}
                },
                "expression": {
                    "and": [
                        {
                            "contains": [
                                "@triggerBody()?['body']?['content']",
                                "status"
                            ]
                        }
                    ]
                },
                "runAfter": {},
                "type": "If"
            },
            "For_each": {
                "actions": {
                    "Append_to_string_variable": {
                        "inputs": {
                            "name": "itemstatuses",
                            "value": "@{items('For_each')['ITM_NUMBER']}: @{items('For_each')['DLV_STAT_H']}\n\n"
                        },
                        "type": "AppendToStringVariable"
                    }
                },
                "foreach": "@outputs('[RFC]_Call_BAPI_SALESORDER_GETSTATUS')?['body']?['content']?['STATUSINFO']",
                "runAfter": {
                    "Initialize_salesorder_status_variable": [
                        "SUCCEEDED"
                    ]
                },
                "type": "foreach"
            },
            "Initialize_salesorder_number_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "salesOrdernumber",
                            "type": "string",
                            "value": "@body('Post_adaptive_card_and_wait_for_a_response')?['data']?['salesOrderNumber']"
                        }
                    ]
                },
                "runAfter": {
                    "Condition": [
                        "SUCCEEDED"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Initialize_salesorder_status_variable": {
                "inputs": {
                    "variables": [
                        {
                            "name": "itemstatuses",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {
                    "[RFC]_Call_BAPI_SALESORDER_GETSTATUS": [
                        "SUCCEEDED"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Post_error_message_in_a_chat_or_channel": {
                "inputs": {
                    "body": {
                        "messageBody": "<p>Failed to get the sales order status from SAP.</p>",
                        "recipient": "@triggerBody()?['from']?['user']?['id']"
                    },
                    "host": {
                        "connection": {
                            "referenceName": "teams_#workflowname#"
                        }
                    },
                    "method": "post",
                    "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}"
                },
                "runAfter": {
                    "[RFC]_Call_BAPI_SALESORDER_GETSTATUS": [
                        "TIMEDOUT",
                        "SKIPPED",
                        "FAILED"
                    ]
                },
                "type": "ApiConnection"
            },
            "Post_salesorder_status_message_in_a_chat_or_channel": {
                "inputs": {
                    "body": {
                        "messageBody": "<p>Order status for each item:</p><p>@{variables('itemstatuses')}</p><br><p>SAP response (@{body('[RFC]_Call_BAPI_SALESORDER_GETSTATUS')?['content']?['RETURN']?['CODE']}): @{body('[RFC]_Call_BAPI_SALESORDER_GETSTATUS')?['content']?['RETURN']?['MESSAGE']}</p>",
                        "recipient": "@triggerBody()?['from']?['user']?['id']"
                    },
                    "host": {
                        "connection": {
                            "referenceName": "teams_#workflowname#"
                        }
                    },
                    "method": "post",
                    "path": "/beta/teams/conversation/message/poster/Flow bot/location/@{encodeURIComponent('Chat with Flow bot')}"
                },
                "runAfter": {
                    "For_each": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ApiConnection"
            },
            "[RFC]_Call_BAPI_SALESORDER_GETSTATUS": {
                "inputs": {
                    "parameters": {
                        "body": {
                            "SALESDOCUMENT": "@{variables('salesOrdernumber')}",
                            "STATUSINFO": []
                        },
                        "inputBodyType": "JSON",
                        "outputBodyType": "JSON",
                        "rfcName": "BAPI_SALESORDER_GETSTATUS"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "sap_#workflowname#",
                        "operationId": "callRfc",
                        "serviceProviderId": "/serviceProviders/sap"
                    }
                },
                "runAfter": {
                    "Initialize_salesorder_number_variable": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ServiceProvider"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_a_new_\"salesorder_status\"_message_is_added_to_Channel": {
                "inputs": {
                    "host": {
                        "connection": {
                            "referenceName": "teams_#workflowname#"
                        }
                    },
                    "method": "get",
                    "path": "/trigger/beta/teams/@{encodeURIComponent(parameters('TeamsTeamID'))}/channels/@{encodeURIComponent(parameters('TeamsChannelID'))}/messages",
                    "queries": {
                        "$top": 50
                    }
                },
                "recurrence": {
                    "frequency": "Minute",
                    "interval": 1
                },
                "splitOn": "@triggerBody()",
                "type": "ApiConnection"
            }
        }
    },
    "kind": "Stateful"
}
